// <auto-generated />
using System;
using LeratoLetsepe_ContosoUniversity.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeratoLetsepe_ContosoUniversity.Migrations
{
    [DbContext(typeof(CodeFirstContext_DbContext))]
    [Migration("20200120152611_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeratoLetsepe_ContosoUniversity.Models.Illness", b =>
                {
                    b.Property<Guid>("IllnessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IllnessName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IllnessId");

                    b.ToTable("Illnesses");
                });

            modelBuilder.Entity("LeratoLetsepe_ContosoUniversity.Models.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("LeratoLetsepe_ContosoUniversity.Models.Visits", b =>
                {
                    b.Property<Guid>("VisitsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClientIdPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DoctorIdPersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VisitsId");

                    b.HasIndex("ClientIdPersonId");

                    b.HasIndex("DoctorIdPersonId");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("LeratoLetsepe_ContosoUniversity.Models.Client", b =>
                {
                    b.HasBaseType("LeratoLetsepe_ContosoUniversity.Models.Person");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IllnessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PersonId1");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("LeratoLetsepe_ContosoUniversity.Models.Doctor", b =>
                {
                    b.HasBaseType("LeratoLetsepe_ContosoUniversity.Models.Person");

                    b.Property<string>("API")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DoctordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonId1")
                        .HasColumnName("Doctor_PersonId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Specialist")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("PersonId1");

                    b.HasDiscriminator().HasValue("Doctor");
                });

            modelBuilder.Entity("LeratoLetsepe_ContosoUniversity.Models.Visits", b =>
                {
                    b.HasOne("LeratoLetsepe_ContosoUniversity.Models.Client", "ClientId")
                        .WithMany()
                        .HasForeignKey("ClientIdPersonId");

                    b.HasOne("LeratoLetsepe_ContosoUniversity.Models.Doctor", "DoctorId")
                        .WithMany()
                        .HasForeignKey("DoctorIdPersonId");
                });

            modelBuilder.Entity("LeratoLetsepe_ContosoUniversity.Models.Client", b =>
                {
                    b.HasOne("LeratoLetsepe_ContosoUniversity.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId1");
                });

            modelBuilder.Entity("LeratoLetsepe_ContosoUniversity.Models.Doctor", b =>
                {
                    b.HasOne("LeratoLetsepe_ContosoUniversity.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId1");
                });
#pragma warning restore 612, 618
        }
    }
}
